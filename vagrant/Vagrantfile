Vagrant.configure("2") do |config|
  puts "Configuring proxy settings..."
  if Vagrant.has_plugin?("vagrant-proxyconf")
    puts "Found vagrant-proxyconf plugin - Now checking envinronent variables..."
    if ENV["http_proxy"]
      puts "http_proxy is set to: " + ENV["http_proxy"]
      config.proxy.http     = ENV["http_proxy"]
      config.apt_proxy.http = ENV["http_proxy"]
    end
    if ENV["https_proxy"]
      puts "https_proxy is set to: " + ENV["https_proxy"]
      config.proxy.https    = ENV["https_proxy"]
      config.apt_proxy.https = ENV["https_proxy"]
    end
    if ENV["no_proxy"]
      puts "no_proxy paths set to: " + ENV["no_proxy"]
      config.proxy.no_proxy = ENV["no_proxy"] + ",172.28.0.1/16"
    end
  end
  
  repos = ["COMMON", "MDNS_BRIDGE", "REVERSE_PROXY", "NODE", "QUERY", "REGISTRATION", "CONNECTION", "AUTH"]
  
  args = Array.new
  repos.each { |repo|
    if ENV["NMOS_RI_" + repo + "_BRANCH"]
      branch = ENV["NMOS_RI_" + repo + "_BRANCH"]
      puts "Using " + repo + " branch " + branch
    else
      branch = "master"
    end
    args.push(branch)
  }

  config.vm.define "regquery" do |regquery|	
    regquery.vm.hostname = "regquery"
    regquery.vm.box = "bento/ubuntu-16.04"
    regquery.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.linked_clone = true
      vb.memory = 2048
      vb.customize ["modifyvm", :id, "--uartmode1", "disconnected" ]
      vb.customize ["storagectl", :id, "--name", "SATA Controller", "--hostiocache", "on" ]
    end
    
    regquery.vm.network "private_network", type: "dhcp"
    regquery.vm.network "forwarded_port", type: "dhcp", guest: 80, host: 8882, auto_correct: true
    regquery.vm.synced_folder "../", "/vagrant-root"
    regquery.vm.provision :shell, path: "provisioning/provision_regquery.sh", args: args
    regquery.vm.boot_timeout = 600
  end

  config.vm.define "auth" do |auth|	
    auth.vm.hostname = "auth"
    auth.vm.box = "bento/ubuntu-16.04"
    auth.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.linked_clone = true
      vb.memory = 2048
      vb.customize ["modifyvm", :id, "--uartmode1", "disconnected" ]
      vb.customize ["storagectl", :id, "--name", "SATA Controller", "--hostiocache", "on" ]
    end
    
    auth.vm.network "private_network", type: "dhcp"
    auth.vm.network "forwarded_port", type: "dhcp", guest: 80, host: 8886, auto_correct: true
    auth.vm.synced_folder "../", "/vagrant-root"
    auth.vm.provision :shell, path: "provisioning/provision_auth.sh", args: args

    auth.vm.provision :ansible do |ansible|
      ansible.playbook = "provisioning/auth_play.yml"
      ansible.host_vars = {
        "auth" => {
          "nmos_common_repo_branch" => args[0],
          "nmos_mdns_bridge_repo_branch" => args[1],
          "nmos_reverse_proxy_repo_branch" => args[2],
          "nmos_auth_repo_branch" => args[7]}
      }
      ansible.verbose = "-v"
    end
    auth.vm.boot_timeout = 600
  end

  config.vm.define "node" do |node|
    node.vm.box = "bento/ubuntu-16.04"
    node.vm.hostname = "node"
    node.vm.provider "virtualbox" do |vb|
      vb.gui = false
      vb.linked_clone = true
      vb.memory = 2048
      vb.customize ["modifyvm", :id, "--uartmode1", "disconnected" ]
      vb.customize ["storagectl", :id, "--name", "SATA Controller", "--hostiocache", "on" ]
    end
    node.vm.network "private_network", type: "dhcp"
    node.vm.network "forwarded_port", type: "dhcp", guest: 80, host: 8884, auto_correct: true
    node.vm.network "forwarded_port", type: "dhcp", guest: 8858, host: 8858, auto_correct: true
    node.vm.network "forwarded_port", type: "dhcp", guest: 8860, host: 8859, auto_correct: true
    node.vm.synced_folder "../", "/vagrant-root"
    node.vm.provision :shell, path: "provisioning/provision_node.sh", args: args
    node.vm.boot_timeout = 600
  end
end

